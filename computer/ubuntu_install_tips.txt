
##################### open CV3.2
http://www.pyimagesearch.com/2015/06/22/install-opencv-3-0-and-python-2-7-on-ubuntu/
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install build-essential cmake git pkg-config
sudo apt-get install libjpeg8-dev libtiff5-dev libjasper-dev libpng12-dev
sudo apt-get install ffmpeg
sudo apt-get install libgtk2.0-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install libatlas-base-dev gfortran

wget https://bootstrap.pypa.io/get-pip.py
sudo python get-pip.py

sudo apt-get install python2.7-dev
sudo pip install numpy

git clone https://github.com/Itseez/opencv.git
sudo apt-get install gitk
cd opencv/
git checkout 3.2.0
cd ..
git clone https://github.com/Itseez/opencv_contrib.git
cd opencv_contrib
git checkout abf44fcccfe2f281b7442dac243e37b7f436d961

cd ~/opencv

sudo apt-get install libgtk-3-dev
sudo apt-get install qt-sdk

mkdir build
cd build

#avec opengl
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_PYTHON_EXAMPLES=ON -D INSTALL_C_EXAMPLES=OFF -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules -D WITH_QT=ON -D WITH_GTK=ON -D WITH_OPENGL=ON -D -D WITH_CUDA=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D WITH_LAPACK=OFF BUILD_EXAMPLES=ON  ..

#avec cuda
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_PYTHON_EXAMPLES=ON -D INSTALL_C_EXAMPLES=OFF -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules -D WITH_CUDA=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D WITH_LAPACK=OFF -D BUILD_EXAMPLES=ON ..


make -j8
sudo make install -j8
sudo ldconfig

#test 
python
import cv2

###################################################### CUDA ###############################"
get .deb here ;
https://developer.nvidia.com/cuda-downloads


sudo apt-get install linux-headers-$(uname -r)


sudo dpkg -i cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64.deb
sudo apt-get update
sudo apt-get install cuda

sudo gedit ~/.bashrc &
#add following
export PATH=/usr/local/cuda-8.0/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

reboot

#make sure cuda is ok:
cuda-install-samples-8.0.sh cudaSample
cd cudaSample/NVIDIA_CUDA-8.0_Samples/
make -j8
cd ~/cudaSample/NVIDIA_CUDA-8.0_Samples/bin/x86_64/linux/release
./deviceQuery
#you should see 
Detected 1 CUDA Capable device(s)
and info about cuda


#get cudnn lib :
https://developer.nvidia.com/rdp/cudnn-download
unzip and copy the lib into the good directory :
cd cuda
sudo cp lib64/* /usr/local/cuda/lib64/
sudo cp include/* /usr/local/cuda/include/



#################################### install theano

pip install pycuda scikit-cuda
sudo pip install pycuda scikit-cuda

sudo gedit ~/.bashrc &
#add
export CUDA_ROOT=/usr/local/cuda

source ~/.bashrc

cd

  135  git clone https://github.com/Theano/libgpuarray.git
  136  cd libgpuarray
  137  mkdir Build
  138  cd Build
  139  cmake .. -DCMAKE_BUILD_TYPE=Release
  140  make -j8
  142  sudo make install
  144  cd ..
  146  sudo pip install Cython
  147  sudo python setup.py build
  148  sudo python setup.py install
  149  sudo ldconfig

#make sure bashrc is upto date with following
sudo gedit ~/.bashrc &

#make sure bashrc is upto date with following
sudo gedit ~/.bashrc &
export CPATH=$CPATH:/usr/local/include
export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
source ~/.bashrc

sudo cp /usr/local/lib/python2.7/dist-packages/pygpu-0.6.2-py2.7-linux-x86_64.egg/pygpu/gpuarray.so /usr/local/lib/python2.7/dist-packages/pygpu-0.6.2-py2.7-linux-x86_64.egg/.

sudo ldconfig

sudo pip install Theano
sudo pip install nose

sudo gedit ~/.bashrc &
export CUDA_ROOT=/usr/local/cuda
export THEANO_FLAGS='floatX=float32,device=cuda0'
export PYTHONPATH=/usr/local/lib/python2.7
source ~/.bashrc
sudo ldconfig

reboot

#test theano
python
>>> import theano
#you should see:
  warnings.warn('creating CUBLAS context to get version number')
Using cuDNN version 5110 on context None
Mapped name None to device cuda0: GeForce GTX 960M (0000:01:00.0)


 

 


####################################### Keras install version 1.2.1 to be compatible with actual deep drive code


sudo pip install https://github.com/fchollet/keras/tarball/1.2.1

#change the default backend from tensorflow to theano that is better 
gedit ./.keras/keras.json

if not present:
python
import keras

and try again 


replace tensorflow by theano in file keras.json that should be in your home (find . |grep keras.json):
{
    "epsilon": 1e-07,
    "floatx": "float32",
    "image_data_format": "channels_last",
    "backend": "theano"
}


####################################### install caffe
see https://github.com/weiliu89/caffe/tree/ssd

#get the caffe ssd from this repo
git clone https://github.com/weiliu89/caffe.git


sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler
sudo apt-get install --no-install-recommends libboost-all-dev
sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev



use Makefile.config + Makefile from me
make -j8
make test -j8
(optional)
make runtest -j8
-> all should be ok

cd ~/caffe
make pycaffe -j8

sudo gedit ~/.bashrc &
export PYTHONPATH=/home/muratory/caffe/python:$PYTHONPATH
source ~/.bashrc

sudo pip install -U scikit-image
sudo pip install protobuf

#check now caffe into python
python
import caffe
import cv2
import keras

---> all should work as expected


#additional install for deepdrive and ...
sudo apt-get install python-tk
sudo pip install pygame moviepy scikit-learn h5py imutils




########################## Tensorflow optionel
export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-0.12.1-cp27-none-linux_x86_64.whl
sudo pip install --upgrade $TF_BINARY_URL
